@using Reshop.Application.Enums.Product
@{
    ViewData["Title"] = "صفحه اصلی";
}
@section Css
{
    <link href="~/css/animate.min.css" rel="stylesheet" />
}

<cache expires-after="TimeSpan.FromMinutes(15)">
    @await Component.InvokeAsync("SliderImagesComponent")
</cache>

<section class="Category-shortcut">



    <h3>دسته بندی های سایت!</h3>


    <div class="Category-shortcut-items">

        <a href="#">
            <img class="Category-shortcut-style" src="/icons/digital_product.svg" alt="">
            <p>کالای دیجیتال</p>
        </a>



        <a href="#">
            <img class="Category-shortcut-style" src="/icons/gear.svg" alt="">
            <p>لوازم جانبی</p>
        </a>



        <a href="#">
            <img class="Category-shortcut-style" src="/icons/Parts.svg" alt="">
            <p>قطعات</p>
        </a>



        <a href="#">
            <img class="Category-shortcut-style" src="/icons/wrench.svg" alt="">
            <p>لوازم تعمیر</p>
        </a>

    </div>

    <div class="shape-divider" style="width: 105%; left: -5px; right: -5px;">
        <img class="shape-divider-category-img" src="/icons/shape-divider.svg" alt="" srcset="">
    </div>
</section>

<cache expires-after="TimeSpan.FromMinutes(15)">
    @await Component.InvokeAsync("MainPicsComponent")
</cache>

<cache expires-after="TimeSpan.FromMinutes(15)">
    @await Component.InvokeAsync("ProductsForShowComponent",new
    {
        type = ProductTypes.All.ToString(),
        sortBy = SortTypes.MostSale.ToString()
    })

    @await Component.InvokeAsync("ProductsForShowComponent",new
    {
        type = ProductTypes.All.ToString(),
        sortBy = SortTypes.MostSale.ToString()
    })
</cache>



@section Scripts
{
    <script type="text/javascript">
        var countDownDate = new Date("Jan 5, 2025 00:00:00").getTime();
        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get today's date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="demo"
            document.getElementById("timer").innerHTML = "<span>" + seconds + "</span>" + " : " + "<span>" + minutes + "</span>" + " : " + "<span>" + hours + "</span>";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                document.getElementById("timer").innerHTML = "EXPIRED";
            }
        }, 1000);



        $('#header-slider').carousel({
            interval: 10000
        });
        $('.carousel-product').owlCarousel({
            rtl: true,
            loop: true,
            dots: false,
            nav: true,
            autoWidth:true,
            margin: 30,
            autoplay: true,
            autoplayTimeout: 3000,
            autoplayHoverPause: true,
            animateOut: 'slideOutDown',
            animateIn: 'flipInX',
            smartSpeed: 1000,
        });

    </script>
}


@section AfterMainOptions
{
    <partial name="_toast" />
}
