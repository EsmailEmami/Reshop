@model ShopperProductColorDiscountDetailViewModel

@{
    Layout = null;
    string columnChartId = "LastDiscountColumnChartData" + Model.ColorId.ToString();
}

<ul class="content-header">
    <li>
        <a onclick="ColorsDetailData('colorDetail@(Model.ColorId)', '@Url.Action("ShopperProductColorDetail","ShoppersManager",new{shopperProductId = ViewBag.ShopperProductId,colorId = Model.ColorId},Context.Request.Scheme)')">رنگ</a>
    </li>
    <li class="active">
        <a onclick="ColorsDiscountDetailData('colorDetail@(Model.ColorId)','@Url.Action("ShopperProductDiscountDetail","ShoppersManager",new{shopperProductId = ViewBag.ShopperProductId,colorId = Model.ColorId},Context.Request.Scheme)')">تخفیف</a>
    </li>
</ul>

<div class="data">
    <div>
        <h3><i class="far fa-tags"></i> تعداد تخفیف های کل: </h3>
        <span>@Model.DiscountsCount</span>
    </div>
    <div>
        <h3><i class="far fa-tags"></i> تعداد فروش در تخفیف: </h3>
        <span>@Model.SellCount</span>
    </div>
    <div>
        <h3><i class="far fa-tags"></i> مقدار سرمایه تخفیف داده شده: </h3>
        <span>@Model.DiscountedAmount.NumSplitter() <span class="toman">تومان</span> </span>
    </div>
    <div>
        <h3><i class="far fa-tags"></i> درامد کل: </h3>
        <span>@Model.Income.NumSplitter() <span class="toman">تومان</span> </span>
    </div>
</div>

<div class="action">
    @if (Model.Discounts.Any() && Model.Discounts.First().Item2 >= DateTime.Now)
    {
        <div>
            <h3><i class="far fa-tags"></i> تاریخ </h3>
            <span>@Model.Discounts.First().Item1 تا @Model.Discounts.First().Item2</span>
        </div>
        <div>
            <h3><i class="far fa-tags"></i> تعداد فروش: </h3>
            <span>@Model.Discounts.First().Item3</span>
        </div>

        <button class="btn btn-warning text-white" onclick="ShowModal('@Url.Action("EditProductOfShopper", "AccountManager", new {productId= Model.ProductId, colorId = Model.ColorId}, Context.Request.Scheme)','ویرایش رنگ')">ویرایش</button>
    }
    else
    {
        <div class="alert alert-warning m-0 ml-3 p-3">
            تخفیف فعالی یافت نشد.
        </div>

        <button class="btn btn-success text-white" onclick="ShowModal('@Url.Action("AddProductDiscount", "AccountManager", new {productId= Model.ProductId, colorId = Model.ColorId}, Context.Request.Scheme)','افزودن تخفیف')">افزودت تخفیف</button>
    }
</div>

<!-- chart -->
<div class="scrollChart">
    <h2 class="chartheader">تخفیف های اخیر</h2>
    <div id="@columnChartId" style="overflow: hidden; width: 100%; min-width: 877px;"></div>
</div>
<!-- table -->
<div class="table-responsive" style="margin-bottom: 1rem;">
    <table class="table responsive table-hover table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">تاریخ</th>
                <th scope="col">تعداد فروش</th>
                <th scope="col">درآمد</th>
            </tr>
        </thead>
        <tbody>

            @{
                int counter = 1;
            }

            @foreach (var item in Model.Discounts)
            {
                <tr>
                    <th scope="row">@counter</th>
                    <td>@item.Item1.ToShamsiDateTime() تا @item.Item2.ToShamsiDateTime()</td>
                    <td>@item.Item3</td>
                    <td>@item.Item4.NumSplitter() <span class="toman">تومان</span> </td>
                </tr>

                counter++;
            }
        </tbody>
    </table>
</div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script>
        google.charts.load('current',
            {
                'packages': ['corechart']
            });

    @{

        string drawLastDiscountColumnChartData = "drawLastDiscountColumnChartData" + Model.ColorId.ToString();
    }

        google.charts.setOnLoadCallback(@drawLastDiscountColumnChartData);


        function @drawLastDiscountColumnChartData () {

            $.ajax({
                type: 'GET',
                url: '/api/Shopper/GetLastTwentyDiscountDataOfShopperProductColor/'+ @Model.ProductId + '/'+ @Model.ColorId,
            }).done(function(res) {
                var data = new google.visualization.DataTable();

                data.addColumn('string', 'تاریخ');
                data.addColumn('number', 'فروش');


                $.each(res,
                    function(index, value) {
                        data.addRow([value.Item1, value.Item2]);
                    });

                var options = {
                    width: '100%',
                    height: '100%',
                    fontName: 'Sahel, sans-serif',
                    color: '#4d4d4d',
                    fontSize: 17,
                    height: 400,
                    colors: ['#FC5400', '#3366cc', '#f95d6a', '#58508d'],

                    bar: {
                        groupWidth: "90%"
                    },
                    chartArea: {
                        right: 0,
                        top: 20,
                        left: 100,
                        width: '95%',
                    },
                    hAxis: {
                        direction: 1,
                        slantedText: true,
                        slantedTextAngle: 50,
                    },
                    vAxis: {
                        format: 'short',
                        title: 'تعداد',
                        titleTextStyle: {
                            color: '#333',
                        },
                        minValue: 0,
                        scaleType: 'Linear',
                    },
                    legend: {
                        position: 'bottom'
                    }
                };

                var chart = new google.visualization.ColumnChart(document.getElementById('@columnChartId'));

                chart.draw(data, options);
            });
        }


        window.addEventListener('resize', @drawLastDiscountColumnChartData);

</script>