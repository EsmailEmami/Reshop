@model ShopperDataForAdmin
@{
    ViewData["Title"] = $"مدیریت فروشنده {Model.ShopperFullName}";
}
@section RightMenu
{
    @{
    await Html.RenderPartialAsync("_RightMenu", RightMenuActivePage.ShopperPage);
 }
}

<section class="general-detail mb-3">
    <div class="row">
        <!-- img part -->
        <div class="col-sm-12 col-md-4 mb-3 mb-md-0">
            <div class="box-shadow">
                <div class="show-img-box">
                    <img id="zoom" src="/images/shoppersCardImages/@Model.OnNationalCardImageName" alt="@Model.ShopperFullName">
                </div>

                <!-- start slider pictures -->
                <div class="swiper" id="images-swiper">
                    <div class="swiper-wrapper">


                        <div class="swiper-slide mini-pic-slider">
                            <img src="/images/shoppersCardImages/@Model.OnNationalCardImageName" alt="@Model.ShopperFullName" onclick="changeDetailImg(this.src)">
                        </div>

                        <div class="swiper-slide mini-pic-slider">
                            <img src="/images/shoppersCardImages/@Model.BusinessLicenseImageName" alt="@Model.ShopperFullName" onclick="changeDetailImg(this.src)">
                        </div>

                    </div>

                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
        </div>

        <!-- product data part -->
        <div class="col-sm-12 col-md-8">
            <div class="general-data box-shadow">
                <span class="part-title">مشخصات فروشنده</span>
                <div>
                    <h3><i class="far fa-tags"></i> نام و نام خانوادگی فروشنده: </h3>
                    <span>@Model.ShopperFullName</span>
                </div>
                <div>
                    <h3><i class="far fa-tags"></i> شماره تلفن: </h3>
                    <span>@Model.PhoneNumber</span>
                </div>
                <div>
                    <h3><i class="far fa-tags"></i> تاریخ تولد: </h3>
                    <span>@Model.BirthDay.ToShamsiDate()</span>
                </div>
                <div>
                    <h3><i class="far fa-tags"></i> کد ملی: </h3>
                    <span>@Model.NationalCode</span>
                </div>
                <div>
                    <h3><i class="far fa-tags"></i> ایمیل: </h3>
                    <span>@Model.Email</span>
                </div>
                <div>
                    <h3><i class="far fa-tags"></i> صدور شناسنامه: </h3>
                    <span>@Model.IssuanceOfIdentityCard</span>
                </div>
                <div>
                    <h3><i class="far fa-tags"></i> شماره شناسنامه: </h3>
                    <span>@Model.FullIdOfIdentityCard</span>
                </div>
            </div>
        </div>
    </div>
</section>

<a class="btn btn-warning text-white" asp-action="EditShopper" asp-route-shopperId="@Model.ShopperId">
    ویرایش فروشنده
</a>

<section class="chart box-shadow mb-3">
    <span class="part-title">آمار کلی</span>



    <div class="scrollChart">
        <h2 class="chartheader">آمر کلی 30 روز اخیر</h2>
        <div id="LastMonthDataLineChart" style="overflow: hidden; width: 100%; min-width: 877px;"></div>
    </div>

</section>

<a class="btn btn-success text-white"
   onclick="ShowModal('@Url.Action("AddStoreAddress", "ShoppersManager", new{shopperId = Model.ShopperId}, Context.Request.Scheme)', 'آدرس جدید')">
    افزودن ادرس  جدید
</a>
@* address part *@
<section class="addresses">

    @if (!Model.StoreAddresses.Any())
    {
        <div class="alert alert-warning">
            ادرسی از فروشنده یافت نشد.
        </div>
    }
    else
    {
        @foreach (var item in Model.StoreAddresses)
        {
            <div class="address">
                <div class="header">

                    <div class="items">
                        <a onclick="ShowModal('@Url.Action("EditStoreAddress", "ShoppersManager", new {storeAddressId = item.StoreAddressId}, Context.Request.Scheme)', 'ویرایش آدرس فروشگاه')"><i class="far fa-edit"></i></a>
                        <form asp-action="DeleteStoreAddress" asp-route-storeAddressId="@item.StoreAddressId" method="post" onsubmit="return  SubmitFormData(this,false)">
                            <button type="submit">
                                <i class="far fa-trash-alt"></i>
                            </button>
                        </form>
                    </div>
                </div>

                <div class="personal">
                    <p>@item.StoreName</p>
                    <p>@item.LandlinePhoneNumber</p>
                </div>

                <p class="address-text">
                    @item.StateName - @item.CityName @item.AddressText - پلاک: @item.Plaque
                </p>

                <div class="postal-code">

                    <span><i class="fal fa-envelope"></i> کد پستی:</span>
                    <span>@item.PostalCode</span>


                </div>
            </div>
        }
    }



</section>


<a onclick="ShowModal('@Url.Action("AddShopperProduct","ShoppersManager",new {shopperId = Model.ShopperId},Context.Request.Scheme)','افزودن کالا به فروشنده')"
   class="btn btn-success text-white mt-3 mb-2">افزودن کالا</a>

<section class="table-list" id="tableList">
    @await Component.InvokeAsync("ShopperProductsOfShopperComponent", new { shopperId = Model.ShopperId })
</section>



<section class="table-list" id="tableRequestList">
    @await Component.InvokeAsync("ShopperRequestsComponent", new { shopperId = Model.ShopperId })
</section>



@section AfterMainOptions
{
<partial name="_Modal" />
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>



<script>
    google.charts.load('current',
    {
    'packages': ['corechart']
    });
    google.charts.setOnLoadCallback(drawLastMonthDataLineChart);

    function drawLastMonthDataLineChart() {
    $.ajax({
    type: 'GET',
    url: '/api/Shopper/GetLastThirtyDayShopperData?ShopperId=@Model.ShopperId',
    }).done(function(res) {
    var data = new google.visualization.DataTable();

    data.addColumn('string', 'تاریخ');
    data.addColumn('number', 'بازدید');
    data.addColumn('number', 'فروش');


    $.each(res,
    function(index, value) {
    data.addRow([value.date, value.viewCount, value.sellCount]);
    });

    var options = {
    width: '100%',
    height: '100%',
    isStacked: 'relative',
    fontName: 'Sahel, sans-serif',
    color: '#4d4d4d',
    fontSize: 17,
    height: 400,
    curveType: 'function',
    colors: ['#FC5400', '#3366cc', '#f95d6a', '#58508d'],
    pointSize: 3,
    chartArea: {
    right: 0,
    top: 20,
    left: 100,
    width: '95%',
    },


    hAxis: {
    direction: 1,
    slantedText: true,
    slantedTextAngle: 50,
    },

    vAxis: {
    format: 'short',
    title: 'تعداد',
    titleTextStyle: {
    color: '#333',
    },
    minValue: 0,
    scaleType: 'Linear',
    },
    legend: {
    position: 'bottom'
    }
    };

    var chart = new google.visualization.LineChart(document.getElementById('LastMonthDataLineChart'));

    chart.draw(data, options);
    });
    }





    window.onresize = drawLastMonthDataLineChart;

</script>



<script>
    const imagesSwiper = new Swiper('#images-swiper', {
        slidesPerView: 'auto',
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
    });
</script>
}